#!/usr/bin/env python3
import fileinput
import sys
import yaml
from jinja2 import Template
from termcolor import colored as c
from os.path import isdir, join, isfile
from shutil import copyfile

payload = ""
payload += "        # Update the PWNboard everytime the agent checks in\n"
payload += "        import requests\n"
payload += "        try:\n"
payload += "            # The host to call back to\n"
payload += "            host = 'http://{{server}}:{{port}}/generic'\n"
payload += "            sessdata = self.get_agent_db(sessionID)\n"
payload += "            # the first internal IP\n"
payload += "            ip = sessdata['internal_ip'].split()[0]\n"
payload += "            headers = {'Content-Type': 'application/json',\n"
payload += "                       'Connection': 'Close'}\n"
payload += "            data = json.dumps({'ip': ip, 'type': 'empire'})\n"
payload += "            # Make the request\n"
payload += "            requests.post(host,data=data, headers=headers)\n"
payload += "        except:\n"
payload += "            pass\n"
search = ""
search += "def update_agent_lastseen_db(self, sessionID, current_time=None):\n"
search += '        """\n'
search += "        Update the agent's last seen timestamp in the database.\n"
search += '        """\n'


def err(msg):
    print(c("[!] {}".format(msg), 'red'))


def success(msg):
    print(c("[+] {}".format(msg), 'green'))

def insertText(fil, search, text):
    '''
    Insert the text into fil after the search lines are found
    '''
    # back up the file
    copyfile(fil, fil+".bak")
    with open(fil, "r") as f:
        contents = f.read()
    index = contents.index(search) + len(search)
    newcont = contents[:index] + text + contents[index:]

    with open(fil, "w") as f:
        f.write(newcont)

def main():
    '''
    Get the agents file or return a usage message
    '''
    agentsFile = ""
    try:
        path = sys.argv[1]
        path = join(path,"lib/common/agents.py")
        if isfile(path):
            agentsFile = path
        else:
            raise Exception("Not a file")
    except Exception as E:
        err('Please pass the directory of Empire as an argument')
        quit()
    success("Empire Agents file found")
    # Check for the config file
    if not isfile("config.yml"):
        err("'config.yml' not found. Are you running from the pwnboard "\
            "root directory?")
        quit()
    # Read the config file
    try:
        with open('config.yml') as fil:
            CONFIG = yaml.load(fil)
    except Exception as E:
        err("Error reading configuration file 'config.yml'")
        quit()
    # Get the port and payload from the config
    port = CONFIG.get("pwnboard_port","80")
    server = CONFIG.get("pwnboard_server","localhost")
    success("Using 'http://{}:{}/generic' as the pwnboard server".format(server,
                                                                         port))
    # Render the payload with the port and server
    temp = Template(payload)
    lines = temp.render(server=server, port=port)
    insertText(agentsFile, search, lines)
if __name__ == '__main__':
    main()
